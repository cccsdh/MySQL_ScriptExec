<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDelete.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAN5JREFUaEPtlTEOgkAQRbeaIYTSwtLSQ1hYUnoEj+JNPIpHsbSwA4wlzuCYjMaQ
        yJoN6H/Ja/4sE74GCAAAAAAAI6Fm3jXMbZ96xo6Pj0kVaPJ8fmVeeCuijd5gn3rm9TrdZWvT0RAd3v3C
        g5RdtjYd0y/AXIrbL1naWvBfVEUxuxDtH1ZZtrJR8LlqcZC30NLnusNG6elegc8P5NZG+oz4vLVYvxVr
        n+sOG6UHBUQUiAEFRBSIAQVEFIgBBUQUiOH3ChCdxWOnz++zLq+JTj4f2z/wsSgAAAAAADCUEG7YNoOO
        viQheAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnGet.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAf1JREFUaEPtliFPw0AUxytItuuWgECSjIStbQgCiSABiUAgEAgEAoFAIBAIBI4P
        gEAgEQjEJLKChPU6kgnkxD4CAoFAwPtfXpeRjrJx67KR90teer27d+/d9fW9cwRBEARBEAQhk4oTFrk5
        Hfhu885z4zAR343bvooveXjyqapowS80FhMJXL3tlZ/neXhyWHbCsl9qbtrIhhPO8HLjx3P1GYVIpzdc
        hpQOhdcpLzc+vGJjPVDRmq/0BYS7hybR91W066nohLvzh4ze0sldjWwDrj6wWWdoeo3aGE70IQgp7s4f
        /Hw1V6+OagOoE8hW3J0vyDxeKd5PTg1iHKEvMkiq/EmfEsJh7qnWhI2rz4NSvGLe4TgJ2mQ8wFhNRcd4
        70et2NhD5srSzzUr0eJ1bhrImS04xa8Gqrg33ExBp33NTcOw+tbQBj7JQAspD//BUuGpaqotipLSRzT2
        gDk8PQVtoGOjbw0t3jabyBKlX3l6CtpAo69Or2ToW0Mnt0NG6iTv34ySkHMf9HzEvYenpzDFz0LfGk/p
        F2wC2QLVGBUUMYwQ6PaREzw9BTkZ2uhbQ4ubECJH3mCInvfJ1RmfHmODhNBf9a2REJrAEOpejacihFBB
        yUhmCOAUeXoKk/Mt9EeGuc/gc6MAsVRmW3M8/Cu2+oIgCIIgCMK/wHG+AHea5MomESFeAAAAAElFTkSu
        QmCC
</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIACsAgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAACQUlEQVQ4T21TTUgU
        cRR/7z+74sx69LBChYf2ozAqUHcPgix1sEOwh4JCggIjPHQQgo7ZMQrsIHSoS1R4EexQRHRYA8NxE6pL
        7YoXT9qtYD5WdOb13n9m1530B8P7fu//PgahCwXr6xwADRLQ+w2v9CJWH8I41FLblnUTQV1QsU7DgPAR
        EBUR8DknW4jVCZyGWt+2lfkkPizuJF4gyFlr5xTgNy1QeLXplxc1H6Ng1ZeYVIlgZ7cnfUoVzLVZyRqZ
        AZBoMGZZUOMxp5HrXb3GpMrfJhiqsvX3/B8uhmcDK/Mh37dezJt2lfu6o70FBE7MQcG0r6AyXjE73/Lc
        MxvOcEP0inv+yHQMw/AXoloChAkxCBDpi1AJJlQL3Pd80xu9uwWVlnZgGEP7k9+dVM8oB56MdV3AE/3p
        KeLgl1HwyExs6KAzRKmie+ZnhxT8QDTmECEbWfHpUcGCQ1tog6d9j8njSIIVCIIblDLGuOVj3KrddEeW
        xZBIkMvUL6Zd1w5Mc0L3TLRMiGV26mypA6LXWd+7lUiQt+o1NvTz9Iosvh3w3Ou/TXOYk61GHkkQhTOd
        S9QzkG0gDnFlZzedvv0ZKvshtOegsclRDxHoMvMrPLNJneBgTZASmQBbvXt7U8IzDg6L6E3TL802vNI7
        w3MvcaEGX+L/wbA44LvHed9PROYKtlABb2U9ZuEnVByZgeJqDxLB3Lc8XXsxGn7ZZoP+M9n3fvfZix9f
        YjjNgc5RwW1kfXeany9+qcC0nsnvHFkA/gHqf+CVS6onuQAAAABJRU5ErkJggg==
</value>
  </data>
</root>